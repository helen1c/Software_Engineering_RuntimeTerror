{"version":3,"sources":["assets/login-image.png","components/homepage/HomePage.tsx","aboutus/components/AboutUs/AboutUs.tsx","components/header/Header.tsx","errors/HttpCodesUtil.ts","components/login-registration/RegistrationForm.tsx","components/login-registration/LoginForm.tsx","store/actions/findAllHillsActions.ts","components/mountain-lodge/search/MountainLodgeSearch.tsx","store/actions/findAllHillsActionTypes.ts","Routes.tsx","store/reducers/findAllHillsReducer.ts","store/reducer.ts","store/store.ts","App.tsx","serviceWorker.ts","index.tsx","assets/logo.jpg"],"names":["module","exports","HomePage","history","useHistory","className","onClick","e","push","AboutUs","Header","useState","profileImage","setProfileImage","useEffect","sessionStorage","getItem","fetch","method","headers","Headers","authorization","then","response","status","blob","URL","createObjectURL","src","logo","alt","removeItem","window","location","assign","HttpCodesUtil","SUCCESS","CREATED","BAD_REQUEST","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","RegistrationForm","newImage","setNewImage","formik","useFormik","initialValues","name","email","password","confirmPassword","placeOfResidence","dateOfBirth","image","description","validateOnChange","validateOnMount","validateOnBlur","validationSchema","Yup","required","oneOf","onSubmit","values","split","body","JSON","stringify","text","errors","parse","Object","forEach","value","error","setFieldError","fieldName","message","handleSubmit","id","onChange","handleChange","type","max","moment","format","style","marginTop","placeholder","accept","multiple","event","file","target","files","reader","FileReader","onload","result","undefined","readAsDataURL","showImage","display","htmlFor","IconButton","color","aria-label","component","AddAPhotoOutlined","LoginForm","showError","setShowError","loginInfo","setItem","get","href","loginImage","getAllHills","a","json","MountainLodgeSearch","dispatcher","useDispatch","s","setS","results","useSelector","state","findAllHillsReducer","length","console","log","dispatch","payload","resolve","catch","reject","searchText","request","setFieldValue","isClearable","isSearchable","option","options","Routes","path","exact","to","initialHillState","mainReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0fd05c4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login-image.d43f1d58.png\";","import React from \"react\";\r\nimport './HomePage.css';\r\nimport '../../App.css';\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n\r\n        <body>\r\n\r\n        <main className=\"main\">\r\n            <div className=\"main-images\">\r\n                <div className=\"staze\" onClick={e => history.push(\"/mountain-path/search\")}>\r\n                    <span className=\"pretraga\">Pretražite planinarske staze</span>\r\n                </div>\r\n                <div className=\"domovi\" onClick={e => history.push(\"/mountain-lodge/search\")}>\r\n                    <span className=\"pretraga\">Pretražite planinarske domove</span>\r\n                </div>\r\n            </div>\r\n        </main>\r\n\r\n        </body>\r\n\r\n    );\r\n\r\n};","import React from \"react\";\r\n\r\nexport const AboutUs = () => {\r\n\r\n    return (\r\n        <div>\r\n            Ponosno predstavljamo najbolji tim ikada:\r\n            -Helena Ladić\r\n            -Neda Kušurin\r\n            -David Konjevod\r\n            -Ivan Martinović\r\n            -Josipa Kaselj\r\n            -Luka Ravenšćak\r\n            -Marko Rajnović\r\n        </div>\r\n    );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport logo from \"../../assets/logo.jpg\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nfunction Header() {\r\n  const [profileImage, setProfileImage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(sessionStorage.getItem(\"key\") !== null)\r\n    fetch(\"/api/users/image?\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        authorization: sessionStorage.getItem(\"key\") || \"\",\r\n      }),\r\n    }).then(function (response) {\r\n      if (response.status === 200) {\r\n        response.blob().then((e) => {\r\n          setProfileImage(URL.createObjectURL(e));\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    sessionStorage.removeItem(\"key\");\r\n    window.location.assign(\"/home\");\r\n  }\r\n\r\n  return (\r\n    <nav className=\"header\">\r\n      <div className=\"title-container\">\r\n        <img src={logo} alt={\"Logo\"} className=\"logo-image\" onClick={e => history.push(\"/home\")}/>\r\n        <div className={\"title\"}>Planinarski dnevnik</div>\r\n      </div>\r\n\r\n      <ul className=\"profil\">\r\n        <li className=\"profil-part\">\r\n          {!sessionStorage.getItem(\"key\") ? (\r\n            <div className={\"login-cnt\"}>\r\n              <button className=\"loginAndRegisterButton\" onClick={e => history.push(\"/login\")}>Prijavi se</button>\r\n              <button className=\"loginAndRegisterButton\" onClick={e => history.push(\"/register\")}>Registriraj se</button>\r\n            </div>\r\n          ) : (\r\n            <div className={\"user-cnt\"}>\r\n                <img className=\"profil-image\" alt={\"Slika profila\"} src={profileImage} />\r\n              <button className=\"logout-button\" onClick={logout}>Odjava</button>\r\n            </div>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export class HttpCodesUtil {\r\n  static readonly SUCCESS = 200;\r\n  static readonly CREATED = 201;\r\n  static readonly BAD_REQUEST = 400;\r\n  static readonly UNAUTHORIZED  = 401;\r\n  static readonly FORBIDDEN = 403;\r\n  static readonly NOT_FOUND = 404;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { HttpCodesUtil } from \"../../errors/HttpCodesUtil\";\r\nimport \"./LoginAndRegistrationForm.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { AddAPhotoOutlined } from \"@material-ui/icons\";\r\nimport moment from \"moment\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nexport const RegistrationForm = () => {\r\n  const [newImage, setNewImage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      placeOfResidence: \"\",\r\n      dateOfBirth: \"\",\r\n      image: \"\",\r\n      description: \"\",\r\n    },\r\n    validateOnChange: false,\r\n    validateOnMount: false,\r\n    validateOnBlur: false,\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required(\"Obavezan unos!\"),\r\n      email: Yup.string()\r\n        .required(\"Obavezan unos!\")\r\n        .email(\"E-mail u ne ispravnom obliku.\"),\r\n      password: Yup.string().required(\"Obavezan unos!\"),\r\n      confirmPassword: Yup.string()\r\n        .required(\"Obavezan unos!\")\r\n        .oneOf([Yup.ref(\"password\"), \"\"], \"Lozinke moraju biti iste!\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      values.image = newImage.split(\",\")[1];\r\n\r\n      fetch(\"/api/users\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(values),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((response) => {\r\n        if (response.status !== HttpCodesUtil.CREATED) {\r\n          response.text().then((errors) => {\r\n            errors = JSON.parse(errors);\r\n            Object.values(errors).forEach((value) => {\r\n              const error = JSON.parse(JSON.stringify(value));\r\n              formik.setFieldError(error.fieldName, error.message);\r\n            });\r\n          });\r\n        } else {\r\n          history.push(\"/login\");\r\n        }\r\n      });\r\n    },\r\n  });\r\n\r\n  const showImage = (event: any) => {\r\n    if(!event) return;\r\n    let file = event.target.files[0];\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (newImage) {\r\n\r\n      setNewImage(newImage?.target?.result as string);\r\n    };\r\n    if(file !== undefined)\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <div className=\"registrationForm\">\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <h1>Registracija</h1>\r\n        <div className=\"registration-container\">\r\n          <div className=\"registration-column\">\r\n            <div className=\"inputComponent textAlignLeft\">\r\n              <p className={\"inputLabel\"}>Ime i prezime:</p>\r\n              <input\r\n                id=\"name\"\r\n                className=\"registration-input\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              <p className=\"errorText\">\r\n                {formik.errors.name ? formik.errors.name : null}\r\n              </p>\r\n            </div>\r\n            <div className=\"inputComponent textAlignLeft\">\r\n              <p className={\"inputLabel\"}>E-mail:</p>\r\n              <input\r\n                className=\"registration-input\"\r\n                id=\"email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n              />\r\n              <p className=\"errorText\">\r\n                {formik.errors.email ? formik.errors.email : null}\r\n              </p>\r\n            </div>\r\n            <div className=\"inputComponent textAlignLeft\">\r\n              <p className={\"inputLabel\"}>Lozinka:</p>\r\n              <input\r\n                className={\"registration-input\"}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n              />\r\n              <p className=\"errorText\">\r\n                {formik.errors.password ? formik.errors.password : null}\r\n              </p>\r\n            </div>\r\n            <div className=\"inputComponent textAlignLeft\">\r\n              <p className={\"inputLabel\"}>Ponovite lozinku:</p>\r\n              <input\r\n                className={\"registration-input\"}\r\n                id=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={formik.values.confirmPassword}\r\n                onChange={formik.handleChange}\r\n              />\r\n              <p className=\"errorText\">\r\n                {formik.errors.confirmPassword\r\n                  ? formik.errors.confirmPassword\r\n                  : null}\r\n              </p>\r\n            </div>\r\n            <div className=\"inputComponent textAlignLeft\">\r\n              <p className={\"inputLabel\"}>Mjesto stanovanja:</p>\r\n              <input\r\n                className={\"registration-input\"}\r\n                id=\"placeOfResidence\"\r\n                value={formik.values.placeOfResidence}\r\n                onChange={formik.handleChange}\r\n              />\r\n              <p className=\"errorText\">\r\n                {formik.errors.placeOfResidence\r\n                  ? formik.errors.placeOfResidence\r\n                  : null}\r\n              </p>\r\n            </div>\r\n            <div className=\"textAlignLeft\">\r\n              <p className={\"inputLabel\"}>Datum rođenja:</p>\r\n              <input\r\n                className={\"registration-input\"}\r\n                id=\"dateOfBirth\"\r\n                type=\"date\"\r\n                max={moment().format(\"YYYY-MM-DD\")}\r\n                value={formik.values.dateOfBirth}\r\n                onChange={formik.handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"registration-column\">\r\n            <div className=\"textAlignLeft\">\r\n              <p style={{ marginTop: \"2rem\" }} className={\"inputLabel\"}>\r\n                O meni:\r\n              </p>\r\n              <textarea\r\n                placeholder={\"Unesite nešto više o sebi...\"}\r\n                className={\"registration-text-area\"}\r\n                id=\"description\"\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n              />\r\n              <p className=\"errorText\">\r\n                {formik.errors.description ? formik.errors.description : null}\r\n              </p>\r\n            </div>\r\n            <input className={\"upload-picture\"}\r\n                   accept={\"image/*\"}\r\n                   id={\"icon-button-file\"}\r\n                   type=\"file\" multiple\r\n                   onChange={(event) => {\r\n                     showImage(event)\r\n                     event.target.value=\"\"\r\n                   }}\r\n            />\r\n            {newImage ?\r\n                <div className={\"wrapper-picture\"}>\r\n                  <img\r\n                      style = {{display:\"block\"}}\r\n                      className=\"profileImage\"\r\n                      src={newImage}\r\n                      alt=\"Slika profila\"\r\n                  />\r\n                  <span className={\"remove-picture\"} onClick={() => setNewImage(\"\")}><DeleteForeverIcon/></span>\r\n\r\n                </div>\r\n                :\r\n                <>\r\n                  <div className={\"wrapper-picture\"}>\r\n                    <div className={\"picture-container\"}>\r\n                      <label htmlFor=\"icon-button-file\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                          <AddAPhotoOutlined/>\r\n                        </IconButton>\r\n                      </label>\r\n                    </div></div>\r\n                </>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" className=\"submitButton\">\r\n            Registriraj se\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { HttpCodesUtil } from \"../../errors/HttpCodesUtil\";\r\nimport \"./LoginAndRegistrationForm.css\";\r\nimport loginImage from \"../../assets/login-image.png\";\r\n\r\nexport const LoginForm = () => {\r\n  const [showError, setShowError] = useState<boolean>(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validateOnChange: false,\r\n    validateOnMount: false,\r\n    validateOnBlur: false,\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required(\"Molimo unesite e-mail.\")\r\n        .email(\"Ne ispravan oblik mail-a.\"),\r\n      password: Yup.string().required(\"Molimo unesite lozinku.\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      let loginInfo = {\r\n        email: values.email,\r\n        password: values.password,\r\n      };\r\n      fetch(\"/api/login\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(loginInfo),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then(function (response) {\r\n        if (\r\n          response.status === HttpCodesUtil.UNAUTHORIZED ||\r\n          response.status === HttpCodesUtil.FORBIDDEN\r\n        ) {\r\n          setShowError(true);\r\n        } else if (response.status === HttpCodesUtil.SUCCESS) {\r\n          sessionStorage.setItem(\r\n            \"key\",\r\n            response.headers.get(\"authorization\") || \"\"\r\n          );\r\n          window.location.href = \"/home\";\r\n        }\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"loginForm\">\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <h1>Prijava</h1>\r\n        <div className=\"inputForm\">\r\n          <div className=\"inputComponent\">\r\n            <p className={\"inputLabel\"}>E-mail:</p>\r\n            <input className={\"login-input\"}\r\n              id=\"email\"\r\n              value={formik.values.email}\r\n              placeholder={\"Unesite e-mail...\"}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <p className=\"errorText\">{formik.errors.email}</p>\r\n          </div>\r\n          <div className=\"inputComponent password-component\">\r\n            <p className={\"inputLabel\"}>Lozinka:</p>\r\n            <input className={\"login-input\"}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder={\"Unesite lozinku...\"}\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <p className=\"errorText\">{formik.errors.password}</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {showError ? (\r\n              <span className=\"errorText\">Neispravan e-mail ili lozinka.</span>\r\n          ) : <></>}\r\n        </div>\r\n        <div>\r\n          <button type={\"submit\"} className=\"submitButton\">\r\n            Prijavi se\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <p className=\"toRegistration\">\r\n            Nemaš korisnički račun?{\" \"}\r\n            <a\r\n              className=\"toRegistrationAction\"\r\n              href={\"/register\"}\r\n            >\r\n              Registriraj se\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <img src={loginImage} alt={\"Mountaineers pic\"} className=\"loginImage\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n    FIND_ALL_HILLS,\r\n    FIND_ALL_HILLS_ERROR,\r\n    FIND_ALL_HILLS_SUCCESS,\r\n    findAllHillsActionTypes\r\n} from \"./findAllHillsActionTypes\"\r\nimport {HillOption} from \"../../components/mountain-lodge/models/HillOption\";\r\nimport {Dispatch} from \"react\";\r\n\r\n\r\nexport const findAllHills = () : findAllHillsActionTypes => ({\r\n   type: FIND_ALL_HILLS,\r\n   payload: undefined\r\n});\r\n\r\nexport const findAllHillsSuccess = (options : HillOption[]) : findAllHillsActionTypes => ({\r\n    type: FIND_ALL_HILLS_SUCCESS,\r\n    payload: options\r\n});\r\n\r\nexport const findAllHillsError = (error : string | undefined) : findAllHillsActionTypes => ({\r\n    type: FIND_ALL_HILLS_ERROR,\r\n    payload: undefined\r\n});\r\n\r\nexport const findHills = () => (dispatch: Dispatch<findAllHillsActionTypes>) => {\r\n    dispatch(findAllHills());\r\n    getAllHills().then(resolve => {\r\n        dispatch(findAllHillsSuccess(resolve));\r\n        return;\r\n    }).catch(reject => {\r\n        dispatch(findAllHillsError(reject));\r\n    })\r\n}\r\n\r\nconst getAllHills = async (): Promise<HillOption[]> => {\r\n    let result = await fetch(\"/api/hills/all\");\r\n    return result.json();\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport './MountainLodgeSearch.css'\r\nimport Select, {ValueType} from \"react-select\";\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport {HillOption} from \"../models/HillOption\";\r\nimport {MountainLodgeSearchRequest} from \"../models/MountainLodgeSearchRequest\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {MainReducer} from \"../../../store/reducer\";\r\nimport {findHills} from \"../../../store/actions/findAllHillsActions\";\r\n\r\nexport const MountainLodgeSearch = () => {\r\n\r\n    const dispatcher = useDispatch();\r\n    const [s, setS] = useState(\"\");\r\n\r\n    const ispis = (request : MountainLodgeSearchRequest) => {\r\n        setS(\"Upravo pretražujete dom naziva: \" + request.searchText);\r\n    }\r\n\r\n    const {results} = useSelector((state: MainReducer) => state.findAllHillsReducer);\r\n\r\n    useEffect(() => {\r\n        if(results === undefined || results.length === 0) {\r\n            console.log(\"Get all Hills...\");\r\n            dispatcher(findHills());\r\n        }\r\n    }, [dispatcher, results]);\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <Formik initialValues={{\r\n                searchText: \"\"\r\n            } as MountainLodgeSearchRequest\r\n            } onSubmit={ispis}>\r\n                {({setFieldValue}) =>{\r\n                    return (<Form className=\"search-lodges-form\">\r\n                            <button className=\"search-button\" type=\"submit\">&#8981;</button>\r\n                        <Field className={\"input-search\"} placeholder={\"Pretražite planinarske domove...\"} name={\"searchText\"} id={\"searchText\"}/>\r\n                        <Select\r\n                            className=\"hill-select\"\r\n                            isClearable={true}\r\n                            isSearchable={true}\r\n                            placeholder=\"Odaberite područje...\"\r\n                            name={\"hillId\"}\r\n                            onChange={(option: ValueType<HillOption>) => setFieldValue(\"hillId\",\r\n                                option === null ? null : (option as HillOption).value)\r\n                            }\r\n                            options={results}>\r\n                        </Select>\r\n                    </Form>\r\n\r\n                  );\r\n                }}\r\n            </Formik>\r\n            <p className={\"searching\"}>{s}</p>\r\n\r\n            </div>\r\n        );\r\n\r\n}\r\n","import {HillOption} from \"../../components/mountain-lodge/models/HillOption\";\r\n\r\nexport const FIND_ALL_HILLS = \"FIND_ALL_HILLS\";\r\nexport const FIND_ALL_HILLS_SUCCESS = \"FIND_ALL_HILLS_SUCCESS\";\r\nexport const FIND_ALL_HILLS_ERROR = \"FIND_ALL_HILLS_ERROR\";\r\n\r\ninterface findAllHills {\r\n    type: typeof FIND_ALL_HILLS,\r\n    payload: undefined\r\n}\r\n\r\ninterface findAllHillsSuccess {\r\n    type: typeof FIND_ALL_HILLS_SUCCESS,\r\n    payload: HillOption[]\r\n}\r\n\r\ninterface findAllHillsError {\r\n    type: typeof FIND_ALL_HILLS_ERROR,\r\n    payload: string | undefined\r\n}\r\n\r\nexport type findAllHillsActionTypes = findAllHills | findAllHillsSuccess | findAllHillsError;","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router\";\r\nimport {HomePage} from \"./components/homepage/HomePage\";\r\nimport {AboutUs} from \"./aboutus/components/AboutUs/AboutUs\";\r\nimport Header from \"./components/header/Header\";\r\nimport {RegistrationForm} from \"./components/login-registration/RegistrationForm\";\r\nimport {LoginForm} from \"./components/login-registration/LoginForm\";\r\nimport {MountainLodgeSearch} from \"./components/mountain-lodge/search/MountainLodgeSearch\";\r\n\r\nexport const Routes = () => {\r\n\r\n    return (\r\n        <div>\r\n        <Header/>\r\n            <Switch>\r\n                <Route path={\"/\"} exact={true}>\r\n                    <Redirect to={\"home\"}/>\r\n                </Route>\r\n                <Route path=\"/home\" component={HomePage} exact={true}/>\r\n                <Route path=\"/aboutus\" component={AboutUs} exact={true}/>\r\n                <Route path=\"/register\" component={RegistrationForm} exact={true}/>\r\n                <Route path=\"/login\" component={LoginForm} exact={true}/>\r\n                <Route path=\"/mountain-lodge/search\" component={MountainLodgeSearch} exact/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n\r\n}","import {HillOption} from \"../../components/mountain-lodge/models/HillOption\";\r\nimport {\r\n    FIND_ALL_HILLS,\r\n    FIND_ALL_HILLS_ERROR,\r\n    FIND_ALL_HILLS_SUCCESS,\r\n    findAllHillsActionTypes\r\n} from \"../actions/findAllHillsActionTypes\";\r\n\r\n\r\nexport interface HillState {\r\n    results: HillOption[],\r\n    error: string | undefined,\r\n    status: string\r\n}\r\n\r\nconst initialHillState = {\r\n    results: [],\r\n    error: undefined,\r\n    status: \"idle\"\r\n} as HillState;\r\n\r\nexport default (state: HillState = initialHillState, action: findAllHillsActionTypes) => {\r\n\r\n    switch (action.type) {\r\n        case FIND_ALL_HILLS: return {...state, status: 'waiting'};\r\n        case FIND_ALL_HILLS_SUCCESS: return {...state, status: 'success', results: action.payload};\r\n        case FIND_ALL_HILLS_ERROR: return {...state, status: 'error', error: action.payload}\r\n        default: return state;\r\n    }\r\n\r\n};","import {combineReducers} from \"redux\";\r\nimport findAllHillsReducer from \"./reducers/findAllHillsReducer\";\r\n\r\nexport const mainReducer = combineReducers(\r\n    {\r\n        findAllHillsReducer\r\n    }\r\n);\r\n\r\nexport type MainReducer = ReturnType<typeof mainReducer>;","import {createStore, applyMiddleware} from \"redux\"\r\nimport {mainReducer} from \"./reducer\";\r\nimport thunk from \"redux-thunk\"\r\n\r\nexport const store = createStore(mainReducer, applyMiddleware(thunk));\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Routes} from \"./Routes\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Routes/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.9659fa90.jpg\";"],"sourceRoot":""}